name: ArduinoBuild(platform-version 2.x)

env:
  SKETCH_NAMES_FIND_START: ./examples/UnitUnified
  REQUIRED_LIBRARIES: M5Unified,M5UnitUnified
  M5UNITUNIFIED_BRANCH: main

on:
  push:
    paths:
      - 'src/unit/**.cpp'
      - 'src/unit/**.hpp'
      - 'src/unit/**.h'
      - 'src/unit/**.c'
      - 'test/**.cpp'
      - 'test/**.hpp'
      - 'test/**.h'
      - 'test/**.c'
      - 'examples/UnitUnified/**.ino'
      - 'examples/UnitUnified/**.cpp'
      - 'examples/UnitUnified/**.hpp'
      - 'examples/UnitUnified/**.h'
      - 'examples/UnitUnified/**.c'
      - '**ArduinoBuild_2.yml'
  pull_request:
    paths:
      - 'src/unit/**.cpp'
      - 'src/unit/**.hpp'
      - 'src/unit/**.h'
      - 'src/unit/**.c'
      - 'test/**.cpp'
      - 'test/**.hpp'
      - 'test/**.h'
      - 'test/**.c'
      - 'examples/UnitUnified/**.ino'
      - 'examples/UnitUnified/**.cpp'
      - 'examples/UnitUnified/**.hpp'
      - 'examples/UnitUnified/**.h'
      - 'examples/UnitUnified/**.c'
      - '**ArduinoBuild_2.yml'
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.unit }}:${{ matrix.sketch }}:${{ matrix.board }}@${{ matrix.platform-version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      #max-parallel: 1
      matrix:
        platform-url:
          - https://espressif.github.io/arduino-esp32/package_esp32_index.json
#           - https://m5stack.oss-cn-shenzhen.aliyuncs.com/resource/arduino/package_m5stack_index.json

        sketch:
          - PlotToSerial

        unit:
          - UnitToF
#          - UnitToF4M

        board:
          - m5stack-core-esp32
#          - m5stack-core2
#          - m5stack-atoms3
#          - m5stack-cores3

        platform-version:
          #- 2.0.15
          #- 2.0.16
          - 2.0.17

        platform:
          - esp32

        archi:
          - esp32

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # Checkout library from specific URL and branch
      # Note that dependent libraries are not automatically installed.

      # - name: Checkout M5Utility
      #   uses: actions/checkout@v4
      #   with:
      #     repository: m5stack/M5Utility
      #     ref: ${{ env.M5UNITUNIFIED_BRANCH }}
      #     path: CustomLibrary_M5Utility # must contain string "Custom"
      #     #token: ${{ secrets.TOKEN_M5UNITUNIFIED }} # Only required during development in private repo

      # - name: Checkout M5HAL

      #   uses: actions/checkout@v4
      #   with:
      #     repository: m5stack/M5HAL
      #     ref: ${{ env.M5UNITUNIFIED_BRANCH }}
      #     path: CustomLibrary_M5HAL # must contain string "Custom"
      #     #token: ${{ secrets.TOKEN_M5UNITUNIFIED }} # Only required during development in private repo

      # - name: Checkout M5UnitUnified
      #   uses: actions/checkout@v4
      #   with:
      #     repository: m5stack/M5UnitUnified
      #     ref: ${{ env.M5UNITUNIFIED_BRANCH }}
      #     path: CustomLibrary_M5UnitUnified
      #     #token: ${{ secrets.TOKEN_M5UNITUNIFIED }} # Only required during development in private repo

      # Build 
      - name: Compile examples
        uses: ArminJo/arduino-test-compile@master
        with:
          arduino-board-fqbn: ${{ matrix.platform }}:${{ matrix.archi }}:${{ matrix.board }}
          arduino-platform: ${{ matrix.platform }}:${{ matrix.archi }}@${{ matrix.platform-version }}
          platform-url: ${{ matrix.platform-url }}
          required-libraries: ${{ env.REQUIRED_LIBRARIES }}
          extra-arduino-cli-args: ${{ matrix.cli-args }}
          #build-properties: ${{ toJson(matrix.build-properties) }}
          sketch-names: ${{ matrix.sketch }}.ino
          sketch-names-find-start: ${{ env.SKETCH_NAMES_FIND_START }}/${{ matrix.unit }}
          #sketches-exclude: ${{ matrix.sketches-exclude }}
